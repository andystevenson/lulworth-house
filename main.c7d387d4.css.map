{"version":3,"sources":["scss/blocks/_social.scss","node_modules/gorko/src/generator/workers/_generate-css.scss","node_modules/gorko/src/generator/_generator.scss","scss/_reset.scss","scss/main.scss","node_modules/gorko/src/mixins/_apply-utility.scss","node_modules/gorko/src/mixins/_media-query.scss","scss/blocks/_definition-group.scss","scss/blocks/_tags-list.scss","scss/blocks/_site-foot.scss","scss/blocks/_site-head.scss","scss/blocks/_nav.scss","scss/blocks/_button.scss","scss/blocks/_button-list.scss","scss/blocks/_skip-link.scss","scss/blocks/_cta.scss","scss/blocks/_page-header.scss","scss/blocks/_pagination.scss","scss/blocks/_people.scss","scss/blocks/_person.scss","scss/blocks/_gallery.scss","scss/utilities/_dot-shadow.scss","scss/utilities/_flow.scss","scss/utilities/_frame.scss","scss/utilities/_panel.scss","scss/utilities/_radius.scss","scss/utilities/_site-wrap.scss","scss/utilities/_visually-hidden.scss","scss/utilities/_wrapper.scss","scss/utilities/_headline.scss","scss/utilities/_auto-grid.scss","scss/utilities/_split.scss"],"names":[],"mappings":"AAqBA,iBCXI,SACE,mBADF,eACE,mBADF,eACE,mBADF,UACE,mBADF,gBACE,mBADF,gBACE,mBADF,YACE,mBADF,kBACE,mBADF,kBACE,mBADF,cACE,mBADF,oBACE,mBADF,oBACE,mBADF,aACE,mBADF,mBACE,mBADF,mBACE,mBADF,YACE,cADF,kBACE,cADF,kBACE,cADF,aACE,cADF,mBACE,cADF,mBACE,cADF,eACE,cADF,qBACE,cADF,qBACE,cADF,iBACE,cADF,uBACE,cADF,uBACE,cADF,gBACE,cADF,sBACE,cADF,sBACE,cADF,gBACE,qBADF,gBACE,oBADF,gBACE,qBADF,gBACE,kBADF,gBACE,qBADF,gBACE,qBADF,gBACE,qBADF,gBACE,qBADF,gBACE,oBADF,kBACE,oBADF,WACE,mCADF,WACE,4EADF,aACE,kBADF,aACE,iBADF,aACE,kBADF,aACE,gBADF,aACE,mBADF,aACE,mBADF,aACE,mBADF,aACE,mBADF,aACE,kBADF,eACE,kBADF,eACE,gBADF,eACE,gBADF,cACE,cADF,eACE,eADF,iBACE,eADF,eACE,eADF,cACE,eADF,UACE,iBADF,UACE,gBADF,UACE,iBADF,UACE,eADF,UACE,kBADF,UACE,kBADF,UACE,kBADF,UACE,kBADF,UACE,iBADF,YACE,iBADF,eACE,gBADF,aACE,gBCCF,mCDFA,oBACE,qBADF,oBACE,oBADF,oBACE,qBADF,oBACE,kBADF,oBACE,qBADF,oBACE,qBADF,oBACE,qBADF,oBACE,qBADF,oBACE,oBADF,sBACE,oBADF,iBACE,kBADF,iBACE,iBADF,iBACE,kBADF,iBACE,gBADF,iBACE,mBADF,iBACE,mBADF,iBACE,mBADF,iBACE,mBADF,iBACE,kBADF,mBACE,kBADF,mBACE,eADF,qBACE,eADF,mBACE,eADF,kBACE,eADF,cACE,iBADF,cACE,gBADF,cACE,iBADF,cACE,eADF,cACE,kBADF,cACE,kBADF,cACE,kBADF,cACE,kBADF,cACE,iBADF,gBACE,kBCCF,mCDFA,oBACE,qBADF,oBACE,oBADF,oBACE,qBADF,oBACE,kBADF,oBACE,qBADF,oBACE,qBADF,oBACE,qBADF,oBACE,qBADF,oBACE,oBADF,sBACE,oBADF,iBACE,kBADF,iBACE,iBADF,iBACE,kBADF,iBACE,gBADF,iBACE,mBADF,iBACE,mBADF,iBACE,mBADF,iBACE,mBADF,iBACE,kBADF,mBACE,kBADF,mBACE,eADF,qBACE,eADF,mBACE,eADF,kBACE,eADF,cACE,iBADF,cACE,gBADF,cACE,iBADF,cACE,eADF,cACE,kBADF,cACE,kBADF,cACE,kBADF,cACE,kBADF,cACE,iBADF,gBACE,kBCCF,mCDFA,oBACE,qBADF,oBACE,oBADF,oBACE,qBADF,oBACE,kBADF,oBACE,qBADF,oBACE,qBADF,oBACE,qBADF,oBACE,qBADF,oBACE,oBADF,sBACE,oBADF,iBACE,kBADF,iBACE,iBADF,iBACE,kBADF,iBACE,gBADF,iBACE,mBADF,iBACE,mBADF,iBACE,mBADF,iBACE,mBADF,iBACE,kBADF,mBACE,kBADF,mBACE,eADF,qBACE,eADF,mBACE,eADF,kBACE,eADF,cACE,iBADF,cACE,gBADF,cACE,iBADF,cACE,eADF,cACE,kBADF,cACE,kBADF,cACE,kBADF,cACE,kBADF,cACE,iBADF,gBACE,kBCCF,mCDFA,oBACE,qBADF,oBACE,oBADF,oBACE,qBADF,oBACE,kBADF,oBACE,qBADF,oBACE,qBADF,oBACE,qBADF,oBACE,qBADF,oBACE,oBADF,sBACE,oBADF,iBACE,kBADF,iBACE,iBADF,iBACE,kBADF,iBACE,gBADF,iBACE,mBADF,iBACE,mBADF,iBACE,mBADF,iBACE,mBADF,iBACE,kBADF,mBACE,kBADF,mBACE,eADF,qBACE,eADF,mBACE,eADF,kBACE,eADF,cACE,iBADF,cACE,gBADF,cACE,iBADF,cACE,eADF,cACE,kBADF,cACE,kBADF,cACE,kBADF,cACE,kBADF,cACE,iBADF,gBACE,kBE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","file":"main.c7d387d4.css","sourceRoot":"..","sourcesContent":[".social {\n  display: flex;\n  justify-content: space-between;\n}\n\n.social > * + * {\n  margin-left: 1em;\n}\n\n.icon {\n  font-size: 2em;\n}\n\n.icon::before {\n  display: inline-block;\n  font-style: normal;\n  font-variant: normal;\n  text-rendering: auto;\n  -webkit-font-smoothing: antialiased;\n}\n\n.facebook::before {\n  font-family: \"Font Awesome 5 Brands\"; font-weight: 900; content: \"\\f09a\";\n}\n\n.twitter::before {\n  font-family: \"Font Awesome 5 Brands\"; font-weight: 400; content: \"\\f099\";\n}\n\n.instagram::before {\n  font-family: \"Font Awesome 5 Brands\"; content: \"\\f16d\";\n}\n\n.tripadvisor::before {\n  font-family: \"Font Awesome 5 Brands\"; content: \"\\f262\";\n}","/// GENERATE CSS MIXIN\n/// The final CSS generator that takes the process params and generates\n/// a CSS utility.\n///\n/// @param {string} $selector - The CSS selector that should be generated\n/// @param {string} $property - The CSS property that this utility affects\n/// @param {map} $items - The collection of utility items to generate classes for\n///\n@mixin generate-css($selector, $property, $items) {\n  @each $key, $value in $items {\n    #{'.' + $selector + '-' + $key} {\n      #{ $property }: #{$value};\n    }\n  }\n}\n","@import 'workers/cycle';\n\n/// Only run if there should be an output\n@if ($outputTokenCSS == true) {\n  /// Run the standard cycle first\n  @include cycle('', false);\n\n  /// For each breakpoint, generate a prefix and run the cycle\n  @each $key, $value in map-get($gorko-config, 'breakpoints') {\n    $prefix: #{$key + '\\\\:'};\n    $is-breakpoint: true;\n\n    @media screen and #{$value} {\n      @include cycle($prefix, $is-breakpoint);\n    }\n  }\n}\n","/* Box sizing rules */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* Remove default margin */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nfigure,\nblockquote,\ndl,\ndd {\n  margin: 0;\n}\n\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\nul[role=\"list\"],\nol[role=\"list\"] {\n  list-style: none;\n}\n\n/* Set core root defaults */\nhtml {\n  scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n  min-height: 100vh;\n  text-rendering: optimizeSpeed;\n  line-height: 1.5;\n}\n\n/* A elements that don't have a class get default styles */\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n  max-width: 100%;\n  display: block;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\n/* Remove all animations and transitions for people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n","// First up: config and functions\n@import 'config';\n\n// Next: pull in gorko for design tokens\n@import '../node_modules/gorko/gorko.scss';\n\n@import 'reset';\n\n// Global styles start\n:root {\n  --spacer: 1rem;\n  --gap: 1rem;\n  --flow-space: #{get-size('600')};\n}\n\nbody {\n  background: get-color('light');\n  color: get-color('dark-shade');\n  line-height: 1.5;\n  font-size: get-size('400');\n\n  @include apply-utility('font', 'base');\n\n  @include media-query('sm') {\n    font-size: get-size('500');\n  }\n\n  // @include media-query('lg') {\n  //   font-size: get-size('600');\n  // }\n}\n\n// on this site we'll style all lists\nul,\nol {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\na:not([class]) {\n  color: currentColor;\n  text-decoration-color: get-color('dark-glare');\n}\n\n:focus {\n  outline: 2px solid get-color('dark-glare');\n  outline-offset: 0.25rem;\n}\n\nmain:focus {\n  outline: none;\n}\n\nh1,\nh2,\nh3,\nh4 {\n  font-weight: 900;\n\n  @include apply-utility('font', 'sans');\n  @include apply-utility('leading', 'flat');\n}\n\n// High contrast selection because it can help visually-impaired\n// folks read the text easier\n::selection {\n  color: get-color('light');\n\n  // We set this as an RGBA because that’s how you get a solid color, by using 0.99\n  // alpha value. Browsers are wild.\n  background: rgba(get-color('dark-shade'), 0.99);\n}\n\n// Scrollbar styles\n::-webkit-scrollbar {\n  height: 1rem;\n}\n\n::-webkit-scrollbar-track {\n  background-color: transparent;\n  border: 1px solid get-color('dark-glare');\n  border-radius: 0.25rem;\n}\n\n::-webkit-scrollbar-thumb {\n  background-color: get-color('dark');\n  border-radius: 0.25rem;\n}\n\n// Import blocks\n@import 'blocks/definition-group';\n@import 'blocks/tags-list';\n@import 'blocks/site-foot';\n@import 'blocks/site-head';\n@import 'blocks/nav';\n@import 'blocks/button';\n@import 'blocks/button-list';\n@import 'blocks/skip-link';\n@import 'blocks/cta';\n@import 'blocks/page-header';\n@import 'blocks/pagination';\n@import 'blocks/people';\n@import 'blocks/person';\n@import 'blocks/gallery';\n@import 'blocks/social';\n\n// Import utilities\n@import 'utilities/dot-shadow';\n@import 'utilities/flow';\n@import 'utilities/frame';\n@import 'utilities/panel';\n@import 'utilities/radius';\n@import 'utilities/site-wrap';\n@import 'utilities/visually-hidden';\n@import 'utilities/wrapper';\n@import 'utilities/headline';\n@import 'utilities/auto-grid';\n@import 'utilities/split';\n\n// page styles\n.main-page header {\n  height: 100vh !important;\n  background-image: url(../images/bg.jpg);\n  background-position: center;\n  background-size: cover;\n  display: grid;\n  place-content: center;\n  text-align: center;\n}\n\n.main-page header a {\n  text-decoration: none;\n}\n\nmain[class$='-page'] header {\n  height: 4vh;\n}\n\nmain[class$='-page'] footer {\n  background: white;\n  text-align: center;\n  padding: 3;\n  -bottom: 1em;\n}\n\nmain[class$='-page'] footer ul {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\nmain[class$='-page'] footer img {\n  max-width: 140px;\n  max-height: 60px;\n  margin: 25px;\n}\n\narticle {\n  display: grid;\n  grid-template-rows: 50vh;\n  gap: 1rem;\n  align-items: center;\n  overflow: hidden;\n\n  & img {\n    min-height: 50vh;\n    object-fit: cover;\n    transition: transform 250ms ease-in-out;\n  }\n\n  & img:hover {\n    transform: scale(.95);\n  }\n\n  @include media-query('lg') {\n    grid-template-columns: 1fr 1fr;\n\n    & .image {\n      grid-column: 2;\n    }\n\n\n    &:nth-child(even) .description {\n      grid-row: 1;\n      grid-column: 2;\n    }\n\n    &:nth-child(even) .image {\n      grid-row: 1;\n      grid-column: 1;\n    }\n  }\n}\n\narticle .description {\n  max-width: 45ch;\n}\n\narticle .summary {\n  color: color-dark-glare;\n}\n\n.lulworth,\n.house,\n.contact {\n  margin-top: 1em;\n  border-top: 2px solid get-color('dark-glare');\n  border-radius: 2px;\n}\n\n.contact-page iframe {\n  max-height: 100%;\n}","/// APPLY UTILITY MIXIN\n/// Grab the property and value of one of the $gorko-config utilities\n/// that the generator will generate a class for.\n///\n/// @param {string} $key - The configured utility’s key\n/// @param {string} $value-key - The value key that you are looking for within the utilty\n///\n@mixin apply-utility($key, $value-key) {\n  $utility: map-get($gorko-config, $key);\n  $property: map-get($utility, 'property');\n  $items: map-get($utility, 'items');\n  $item-value: map-get($items, $value-key);\n\n  @if ($property and $item-value) {\n    #{ $property }: #{$item-value};\n  } @else {\n    @if ($property) {\n      @warn #{'Value: ‘' + $value-key + '’ doesn’t exist in ‘' + $key + '’' };\n    }\n\n    @if ($item-value) {\n      @warn #{ 'Utility ‘' + $key + '’ doesn’t exist' };\n    }\n  }\n}\n","/// MEDIA QUERY MIXIN\n/// Pass in the key of one of your breakpoints set in `$gorko-config['breakpoints']`\n/// and this mixin will generate the @media query with your configured value.\n///\n/// @param {string} $key - The key of your configured breakpoint\n///\n@mixin media-query($key) {\n  $breakpoints: map-get($gorko-config, 'breakpoints');\n  $matched-breakpoint: map-get($breakpoints, $key);\n\n  @if not $matched-breakpoint {\n    @warn #{ 'Breakpoint, ‘' + $key + '’ not found in `$gorko-config`. Make sure it’s set in the ‘breakpoints’ section.' };\n  } @else {\n    @media #{ $matched-breakpoint } {\n      @content;\n    }\n  }\n}\n",".definition-group {\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  grid-gap: 0.5rem 1.5rem;\n}\n",".tags-list {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n\n  &[class] {\n    margin-inline-start: -#{get-size('400')};\n  }\n\n  > * {\n    padding-top: get-size('400');\n    padding-inline-start: get-size('400');\n  }\n}\n",".site-foot {\n  padding: get-size('500') 0 get-size('700') 0;\n  text-align: center;\n}\n\n.site-foot > * {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 1em;\n  align-items: center;\n\n  @include media-query('md') {\n    flex-direction: row;\n  }\n\n}\n\n",".site-head {\n  padding: get-size('100') 0;\n\n  & .inner {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  & .brand {\n    text-decoration: none;\n    margin-inline-end: get-size('600'); // Prevents nav bunching up to the logo\n    width: get-size('700');\n    padding: 0 0 get-size('100') 0;\n  }\n\n  & .navigation {\n    padding: get-size('300') 0 get-size('100') 0;\n  }\n\n  @include media-query('sm') {\n    & .brand {\n      width: get-size('800');\n    }\n  }\n\n  @include media-query('md') {\n    padding-bottom: 0;\n\n    & .brand {\n      width: get-size('900');\n    }\n  }\n}\n","nav {\n  position: absolute;\n  top: 0;\n  right: var(--site-gutter, 3rem);\n  line-height: 1;\n  font-weight: 900;\n  margin-top: #{get-size('200')};\n  margin-inline-start: #{get-size('300')};\n  @include apply-utility('font', 'sans');\n\n  & ul {\n    display: flex;\n    flex-wrap: wrap;\n\n    > * {\n      padding-top: get-size('100');\n      padding-inline-start: get-size('100');\n      @include media-query('sm') {\n        padding-inline-start: get-size('200');\n      }\n      @include media-query('md') {\n        padding-inline-start: get-size('300');\n      }\n    }\n  }\n\n  a {\n    text-decoration: none;\n    display: block;\n    position: relative;\n\n    // Adds the fake border to active state items\n    &[data-state='active'],\n    &[aria-current='page'] {\n      &:before {\n        content: '';\n        display: block;\n        width: 100%;\n        height: 2px;\n        position: absolute;\n        top: 100%;\n        left: 0;\n        margin-top: 2px;\n        background: get-color('tertiary');\n      }\n    }\n  }\n}",".button {\n  @extend .radius;\n\n  display: inline-block;\n  padding: 0.5rem 2rem;\n  background: get-color('primary-shade');\n  color: get-color('dark-shade');\n  border: 2px solid;\n  text-transform: uppercase;\n  text-decoration: none;\n  text-align: center;\n  letter-spacing: 0.1rem;\n\n  @include apply-utility('font', 'sans');\n  @include apply-utility('weight', 'bold');\n\n  transition: transform 300ms;\n\n\n  // Make sure hover state trumps all variants with a good ol’ important\n  &:hover {\n    background: get-color('primary-glare') !important;\n    color: get-color('dark-shade') !important;\n    transform: scale(0.95);\n  }\n\n  // Add a ghost modifier\n  &[data-variant='ghost'] {\n    background: transparent;\n    color: get-color('primary-glare');\n  }\n}",".button-list {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n\n  @include media-query('md') {\n    // justify-content: space-between;\n  }\n}\n\n\n\n.button-list > * {\n}\n",".skip-link {\n  position: absolute;\n  top: get-size('400');\n  left: get-size('400');\n  z-index: 99;\n\n  // @extends should be used with care, but this is a great example of them being hella useful\n  &:not(:focus) {\n    @extend .visually-hidden;\n  }\n}",".cta {\n  \n  // This is a dark panel, so we need to flip the selection styles\n  ::selection {\n    // We set this as an RGBA because that’s how you get a solid color, by using 0.99\n    // alpha value. Browsers are wild.\n    background: rgba(get-color('light'), 0.99);\n    color: get-color('dark-shade');\n  }\n\n  @include media-query('md') {\n    &__inner {\n      display: grid;\n      grid-gap: get-size('700') get-size('500');\n      grid-template-columns: repeat(12, 1fr);\n\n      @supports (display: grid) {\n        > * {\n          margin: 0;\n        }\n      }\n    }\n\n    &__heading {\n      grid-column: 1/9;\n    }\n\n    &__summary {\n      grid-row: 2;\n\n      // Pull the content in from the right, by reversing columns\n      grid-column: 12/5;\n    }\n\n    &__action {\n      grid-row: 3;\n      grid-column: 1/13;\n    }\n  }\n\n  @include media-query('lg') {\n    &__inner {\n      grid-gap: get-size('500');\n    }\n\n    &__summary {\n      grid-column: 12/7;\n    }\n\n    &__action {\n      grid-column: 1/13;\n    }\n  }\n}\n",".page-header {\n  padding: get-size('800') 0;\n}",".pagination {\n  &__inner {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n  }\n\n  // Pushes a sole \"next\" link out to the right\n  &__inner > [data-direction='forwards'] {\n    margin-inline-start: auto;\n  }\n}",".people {\n  --auto-grid-gap: #{get-size('700')};\n}",".person {\n  position: relative;\n  height: 100%;\n\n  &__details {\n    position: absolute;\n    bottom: 0.5rem;\n    left: -0.25rem;\n    width: calc(100% - 0.5rem);\n    padding: 0.8rem;\n    background: get-color('secondary');\n  }\n\n  &__image {\n    filter: grayscale(1);\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n\n  &__name {\n    display: block;\n    font-size: get-size('600');\n  }\n}",".gallery {\n  display: flex;\n  flex-direction: column;\n\n  &__media {\n    max-width: 40rem;\n\n    img {\n      object-fit: cover;\n      // min-height: 720px;\n    }\n  }\n\n  // Indents the even children along the inline-start to acheive a staggered\n  // layout where space permits\n  @include media-query('md') {\n    &__item {\n      &:nth-child(even) {\n        margin-inline-start: auto;\n      }\n    }\n  }\n\n  // Flip each item to be a flex item to align caption and\n  // image together\n  @include media-query('lg') {\n    &__item {\n      $gallery-item-space: get-size('700');\n      display: flex;\n      align-items: flex-end;\n\n      // Flips the horizontal layout. Use this with care though,\n      // because changing source order can be problemetic\n      // for keyboard users\n      &:nth-child(odd) {\n        flex-direction: row-reverse;\n      }\n\n      // A specificity trump that makes sure that each item\n      // has a neg start margin\n      &:nth-child(odd),\n      &:nth-child(even) {\n        margin-inline-start: -$gallery-item-space;\n      }\n\n      > * {\n        margin-inline-start: $gallery-item-space;\n      }\n    }\n  }\n}",".dot-shadow {\n  --dot-shadow-size: 0.75rem;\n  position: relative;\n\n  &::before {\n    @extend .radius;\n\n    content: '';\n    display: block;\n    width: calc(100% + calc(var(--dot-shadow-size) * 2));\n    height: calc(100% + calc(var(--dot-shadow-size) * 2));\n    background-image: url(\"data:image/svg+xml,%3Csvg width='6px' height='6px' viewBox='0 0 6 6' version='1.1' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle fill='%23CAC6B8' cx='1' cy='5' r='1'%3E%3C/circle%3E%3Ccircle fill='%23CAC6B8' cx='4' cy='2' r='1'%3E%3C/circle%3E%3C/svg%3E%0A\");\n    position: absolute;\n    top: calc(var(--dot-shadow-size) * -1);\n    left: calc(var(--dot-shadow-size) * -1);\n    z-index: -1;\n  }\n}\n","/**\n * FLOW\n * Applies a margin to sibling elements based on a --flow-space custom property.\n */\n.flow > * + * {\n  margin-top: var(--flow-space, get-size('600'));\n}\n","$frame-colors: ('primary', 'secondary', 'tertiary');\n\n.frame {\n  position: relative;\n\n  &::before {\n    // I don't like @extends, but I'll create an exception\n    // for consistency\n    @extend .radius;\n\n    content: '';\n    pointer-events: none;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: -0.25rem;\n    left: -0.25rem;\n    border: 0.125rem solid get-color('dark');\n    z-index: 1;\n\n    @include media-query('md') {\n      top: -0.5rem;\n      left: -0.5rem;\n      border-width: 0.25rem;\n    }\n  }\n\n  // For each color, create a variant\n  @each $frame-color in $frame-colors {\n    &[data-frame='#{$frame-color}'] {\n      &::before {\n        border-color: get-color($frame-color);\n      }\n    }\n  }\n}\n","// Adds consitent space and padding for each full panel section\n.panel {\n  margin: get-size('700') 0;\n  padding: get-size('700') 0;\n\n  @include media-query('md') {\n    margin: get-size('800') 0;\n    padding: get-size('800') 0;\n  }\n}\n",".radius {\n  border-radius: var(--radius, 0.25rem);\n}\n",".site-wrap {\n  overflow-x: hidden;\n  position: relative;\n}\n",".visually-hidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: auto;\n  margin: 0;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n  white-space: nowrap;\n}\n","/**\n * WRAPPER\n * Sets a max width, adds a consistent gutter and horizontally\n * centers the contents\n */\n.wrapper {\n  max-width: var(--site-width, 70rem);\n  padding: 0 var(--site-gutter, get-size('500'));\n  margin-left: auto;\n  margin-right: auto;\n  position: relative;\n}\n","$headline-highlights: ('light', 'dark', 'primary', 'secondary', 'tertiary');\n\n.headline {\n  font-size: get-size('600');\n  max-width: 60ch;\n\n  @include media-query('sm') {\n    font-size: get-size('700');\n  }\n\n  @include media-query('md') {\n    font-size: get-size('800');\n  }\n\n  @include media-query('lg') {\n    font-size: get-size('900');\n  }\n\n  &::after {\n    content: '.';\n  }\n\n  // For each color, create an exception\n  @each $headline-highlight in $headline-highlights {\n    &[data-highlight='#{$headline-highlight}'] {\n      &::after {\n        color: get-color($headline-highlight);\n      }\n    }\n  }\n}","/*\n  AUTO GRID\n  Set the minimum item size with `--auto-grid-min-size` and you’ll\n  get a fully responsive grid with no media queries.\n\n  https://piccalil.li/tutorial/create-a-responsive-grid-layout-with-no-media-queries-using-css-grid/\n*/\n.auto-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(var(--auto-grid-min-size, 16rem), 1fr));\n  grid-gap: var(--auto-grid-gap, get-size('500'));\n}","\n.split {\n  display: flex;\n  flex-direction: column;\n  /* gap: var(--spacer); waiting for safari to get fixed */\n  @include media-query('md') {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n}\n\n.split > * + * {\n  margin: var(--gap) 0 0 0;\n\n  @include media-query('md') {\n    margin: 0 0 0 var(--gap);\n  }\n}\n"]}