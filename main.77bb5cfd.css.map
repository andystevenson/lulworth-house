{"version":3,"sources":["scss/_config.scss","node_modules/gorko/src/generator/workers/_generate-css.scss","node_modules/gorko/src/generator/_generator.scss","scss/_reset.scss","scss/main.scss","node_modules/gorko/src/mixins/_apply-utility.scss","node_modules/gorko/src/mixins/_media-query.scss","scss/blocks/_definition-group.scss","scss/blocks/_tags-list.scss","scss/blocks/_site-foot.scss","scss/blocks/_site-head.scss","scss/blocks/_nav.scss","scss/blocks/_button.scss","scss/blocks/_button-list.scss","scss/blocks/_skip-link.scss","scss/blocks/_cta.scss","scss/blocks/_page-header.scss","scss/blocks/_pagination.scss","scss/blocks/_people.scss","scss/blocks/_person.scss","scss/blocks/_gallery.scss","scss/blocks/_social.scss","scss/utilities/_dot-shadow.scss","scss/utilities/_flow.scss","scss/utilities/_frame.scss","scss/utilities/_panel.scss","scss/utilities/_radius.scss","scss/utilities/_site-wrap.scss","scss/utilities/_visually-hidden.scss","scss/utilities/_wrapper.scss","scss/utilities/_headline.scss","scss/utilities/_auto-grid.scss","scss/utilities/_split.scss"],"names":[],"mappings":";AAAA;;;;;EAAA;AAQA;;;;;;EAAA;AAoBA;;;;EAAA;AAuBA;;;;EAAA;ACzCI;EACE,mBAAA;;;AADF;EACE,mBAAA;;;AADF;EACE,mBAAA;;;AADF;EACE,mBAAA;;;AADF;EACE,mBAAA;;;AADF;EACE,mBAAA;;;AADF;EACE,mBAAA;;;AADF;EACE,mBAAA;;;AADF;EACE,mBAAA;;;AADF;EACE,mBAAA;;;AADF;EACE,mBAAA;;;AADF;EACE,mBAAA;;;AADF;EACE,mBAAA;;;AADF;EACE,mBAAA;;;AADF;EACE,mBAAA;;;AADF;EACE,cAAA;;;AADF;EACE,cAAA;;;AADF;EACE,cAAA;;;AADF;EACE,cAAA;;;AADF;EACE,cAAA;;;AADF;EACE,cAAA;;;AADF;EACE,cAAA;;;AADF;EACE,cAAA;;;AADF;EACE,cAAA;;;AADF;EACE,cAAA;;;AADF;EACE,cAAA;;;AADF;EACE,cAAA;;;AADF;EACE,cAAA;;;AADF;EACE,cAAA;;;AADF;EACE,cAAA;;;AADF;EACE,qBAAA;;;AADF;EACE,oBAAA;;;AADF;EACE,qBAAA;;;AADF;EACE,kBAAA;;;AADF;EACE,qBAAA;;;AADF;EACE,qBAAA;;;AADF;EACE,qBAAA;;;AADF;EACE,qBAAA;;;AADF;EACE,oBAAA;;;AADF;EACE,oBAAA;;;AADF;EACE,uCAAA;;;AADF;EACE,uFAAA;;;AADF;EACE,mBAAA;;;AADF;EACE,kBAAA;;;AADF;EACE,mBAAA;;;AADF;EACE,gBAAA;;;AADF;EACE,mBAAA;;;AADF;EACE,mBAAA;;;AADF;EACE,mBAAA;;;AADF;EACE,mBAAA;;;AADF;EACE,kBAAA;;;AADF;EACE,kBAAA;;;AADF;EACE,gBAAA;;;AADF;EACE,gBAAA;;;AADF;EACE,cAAA;;;AADF;EACE,eAAA;;;AADF;EACE,eAAA;;;AADF;EACE,eAAA;;;AADF;EACE,eAAA;;;AADF;EACE,kBAAA;;;AADF;EACE,iBAAA;;;AADF;EACE,kBAAA;;;AADF;EACE,eAAA;;;AADF;EACE,kBAAA;;;AADF;EACE,kBAAA;;;AADF;EACE,kBAAA;;;AADF;EACE,kBAAA;;;AADF;EACE,iBAAA;;;AADF;EACE,iBAAA;;;AADF;EACE,gBAAA;;;AADF;EACE,gBAAA;;;ACCF;EDFA;IACE,qBAAA;;;EADF;IACE,oBAAA;;;EADF;IACE,qBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,qBAAA;;;EADF;IACE,qBAAA;;;EADF;IACE,qBAAA;;;EADF;IACE,qBAAA;;;EADF;IACE,oBAAA;;;EADF;IACE,oBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,gBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,eAAA;;;EADF;IACE,eAAA;;;EADF;IACE,eAAA;;;EADF;IACE,eAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,iBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,eAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,iBAAA;;;EADF;IACE,iBAAA;;;ACCF;EDFA;IACE,qBAAA;;;EADF;IACE,oBAAA;;;EADF;IACE,qBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,qBAAA;;;EADF;IACE,qBAAA;;;EADF;IACE,qBAAA;;;EADF;IACE,qBAAA;;;EADF;IACE,oBAAA;;;EADF;IACE,oBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,gBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,eAAA;;;EADF;IACE,eAAA;;;EADF;IACE,eAAA;;;EADF;IACE,eAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,iBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,eAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,iBAAA;;;EADF;IACE,iBAAA;;;ACCF;EDFA;IACE,qBAAA;;;EADF;IACE,oBAAA;;;EADF;IACE,qBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,qBAAA;;;EADF;IACE,qBAAA;;;EADF;IACE,qBAAA;;;EADF;IACE,qBAAA;;;EADF;IACE,oBAAA;;;EADF;IACE,oBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,gBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,eAAA;;;EADF;IACE,eAAA;;;EADF;IACE,eAAA;;;EADF;IACE,eAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,iBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,eAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,iBAAA;;;EADF;IACE,iBAAA;;;ACCF;EDFA;IACE,qBAAA;;;EADF;IACE,oBAAA;;;EADF;IACE,qBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,qBAAA;;;EADF;IACE,qBAAA;;;EADF;IACE,qBAAA;;;EADF;IACE,qBAAA;;;EADF;IACE,oBAAA;;;EADF;IACE,oBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,gBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,mBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,kBAAA;;;EADF;IACE,eAAA;;;EADF;IACE,eAAA;;;EADF;IACE,eAAA;;;EADF;IACE,eAAA;;;EADF;IACE,kBAAA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","file":"main.77bb5cfd.css","sourceRoot":"..","sourcesContent":["/**\n * BASE SIZE\n * All calculations are based on this. Itâ€™s recommended that\n * you keep it at 1rem because that is the root font size. You\n * can set it to whatever you like and whatever unit you like.\n */\n$gorko-base-size: 1rem;\n\n/**\n * SIZE SCALE\n * This is a Perfect Fourth scale that powers all the utilities that\n * it is relevant for (font-size, margin, padding). All items are\n * calcuated off the base size, so change that and cascade across\n * your whole project.\n */\n$gorko-size-scale: (\n  '100': $gorko-base-size * 0.25, // note bastardise the scale a bit for convenience (0.42)\n  '200': $gorko-base-size * 0.5,  // ditto (0.53)\n  '300': $gorko-base-size * 0.75,\n  '400': $gorko-base-size,\n  '500': $gorko-base-size * 1.33,\n  '600': $gorko-base-size * 1.77,\n  '700': $gorko-base-size * 2.36,\n  '800': $gorko-base-size * 3.15,\n  '900': $gorko-base-size * 4.2,\n  'major': $gorko-base-size * 5.6,\n);\n\n/**\n * COLORS\n * Colors are shared between backgrounds and text by default. \n * You can also use them to power borders, fills or shadows, for example.\n */\n$gorko-colors: (\n  'dark': #38445b,\n  'dark-shade': #263147,\n  'dark-glare': #505c73,\n  'light': #f9f4e3,\n  'light-shade': #fff6d7,\n  'light-glare': #fdfbf3,\n  'primary': #ff7049,\n  'primary-shade': #FD8503,\n  'primary-glare': #f8734e,\n  'secondary': #4caf50,\n  'secondary-shade': #419315,\n  'secondary-glare': #c8e6c9,\n  'tertiary': #ffd490,\n  'tertiary-shade': #ffca77,\n  'tertiary-glare': #ffdeaa,\n);\n\n/**\n * CORE CONFIG\n * This powers everything from utility class generation to breakpoints\n * to enabling/disabling pre-built components/utilities.\n */\n$gorko-config: (\n  'bg': (\n    'items': $gorko-colors,\n    'output': 'standard',\n    'property': 'background',\n  ),\n  'color': (\n    'items': $gorko-colors,\n    'output': 'standard',\n    'property': 'color',\n  ),\n  'flow-space': (\n    'items': $gorko-size-scale,\n    'output': 'responsive',\n    'property': '--flow-space',\n  ),\n  'font': (\n    'items': (\n      'base': '\"Literata\", Georgia, serif',\n      'sans': '\"Red Hat Display\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n    ),\n    'output': 'standard',\n    'property': 'font-family',\n  ),\n  'gap-top': (\n    'items': $gorko-size-scale,\n    'output': 'responsive',\n    'property': 'margin-top',\n  ),\n  'leading': (\n    'items': (\n      'loose': 1.7,\n      'tight': 1.3,\n      'flat': '1',\n    ),\n    'output': 'standard',\n    'property': 'line-height',\n  ),\n  'measure': (\n    'items': (\n      'micro': '10ch',\n      'compact': '30ch',\n      'short': '40ch',\n      'long': '65ch',\n    ),\n    'output': 'responsive',\n    'property': 'max-width',\n  ),\n  'text': (\n    'items': $gorko-size-scale,\n    'output': 'responsive',\n    'property': 'font-size',\n  ),\n  'weight': (\n    'items': (\n      'normal': 400,\n      'bold': 900,\n    ),\n    'output': 'standard',\n    'property': 'font-weight',\n  ),\n  'breakpoints': (\n    'sm': '(min-width: 24em)', // 384px\n    'md': '(min-width: 37em)', // 592px\n    'lg': '(min-width: 62em)', // 992px\n    'xl': '(min-width: 93em)', // 1488px\n  ),\n);\n\n// ","/// GENERATE CSS MIXIN\n/// The final CSS generator that takes the process params and generates\n/// a CSS utility.\n///\n/// @param {string} $selector - The CSS selector that should be generated\n/// @param {string} $property - The CSS property that this utility affects\n/// @param {map} $items - The collection of utility items to generate classes for\n///\n@mixin generate-css($selector, $property, $items) {\n  @each $key, $value in $items {\n    #{'.' + $selector + '-' + $key} {\n      #{ $property }: #{$value};\n    }\n  }\n}\n","@import 'workers/cycle';\n\n/// Only run if there should be an output\n@if ($outputTokenCSS == true) {\n  /// Run the standard cycle first\n  @include cycle('', false);\n\n  /// For each breakpoint, generate a prefix and run the cycle\n  @each $key, $value in map-get($gorko-config, 'breakpoints') {\n    $prefix: #{$key + '\\\\:'};\n    $is-breakpoint: true;\n\n    @media screen and #{$value} {\n      @include cycle($prefix, $is-breakpoint);\n    }\n  }\n}\n","/* Box sizing rules */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* Remove default margin */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nfigure,\nblockquote,\ndl,\ndd {\n  margin: 0;\n}\n\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\nul[role=\"list\"],\nol[role=\"list\"] {\n  list-style: none;\n}\n\n/* Set core root defaults */\nhtml {\n  scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n  min-height: 100vh;\n  text-rendering: optimizeSpeed;\n  line-height: 1.5;\n}\n\n/* A elements that don't have a class get default styles */\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n  max-width: 100%;\n  display: block;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\n/* Remove all animations and transitions for people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n","// First up: config and functions\n@import 'config';\n\n// Next: pull in gorko for design tokens\n@import '../node_modules/gorko/gorko.scss';\n\n@import 'reset';\n\n// Global styles start\n:root {\n  --spacer: 1rem;\n  --gap: 1rem;\n  --flow-space: #{get-size('600')};\n}\n\nbody {\n  background: get-color('light');\n  color: get-color('dark-shade');\n  line-height: 1.5;\n  font-size: get-size('400');\n\n  @include apply-utility('font', 'base');\n\n  @include media-query('sm') {\n    font-size: get-size('500');\n  }\n\n  // @include media-query('lg') {\n  //   font-size: get-size('600');\n  // }\n}\n\n// on this site we'll style all lists\nul,\nol {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\na:not([class]) {\n  color: currentColor;\n  text-decoration-color: get-color('dark-glare');\n}\n\n:focus {\n  outline: 2px solid get-color('dark-glare');\n  outline-offset: 0.25rem;\n}\n\nmain:focus {\n  outline: none;\n}\n\nh1,\nh2,\nh3,\nh4 {\n  font-weight: 900;\n\n  @include apply-utility('font', 'sans');\n  @include apply-utility('leading', 'flat');\n}\n\n// High contrast selection because it can help visually-impaired\n// folks read the text easier\n::selection {\n  color: get-color('light');\n\n  // We set this as an RGBA because thatâ€™s how you get a solid color, by using 0.99\n  // alpha value. Browsers are wild.\n  background: rgba(get-color('dark-shade'), 0.99);\n}\n\n// Scrollbar styles\n::-webkit-scrollbar {\n  height: 1rem;\n}\n\n::-webkit-scrollbar-track {\n  background-color: transparent;\n  border: 1px solid get-color('dark-glare');\n  border-radius: 0.25rem;\n}\n\n::-webkit-scrollbar-thumb {\n  background-color: get-color('dark');\n  border-radius: 0.25rem;\n}\n\n// Import blocks\n@import 'blocks/definition-group';\n@import 'blocks/tags-list';\n@import 'blocks/site-foot';\n@import 'blocks/site-head';\n@import 'blocks/nav';\n@import 'blocks/button';\n@import 'blocks/button-list';\n@import 'blocks/skip-link';\n@import 'blocks/cta';\n@import 'blocks/page-header';\n@import 'blocks/pagination';\n@import 'blocks/people';\n@import 'blocks/person';\n@import 'blocks/gallery';\n@import 'blocks/social';\n\n// Import utilities\n@import 'utilities/dot-shadow';\n@import 'utilities/flow';\n@import 'utilities/frame';\n@import 'utilities/panel';\n@import 'utilities/radius';\n@import 'utilities/site-wrap';\n@import 'utilities/visually-hidden';\n@import 'utilities/wrapper';\n@import 'utilities/headline';\n@import 'utilities/auto-grid';\n@import 'utilities/split';\n\n// page styles\n.main-page header {\n  height: 50vh;\n  background-image: url(../images/bg.jpg);\n  background-position: center;\n  background-size: cover;\n  display: grid;\n  place-content: center;\n  text-align: center;\n}\n\n.main-page header a {\n  text-decoration: none;\n}\n\n.main-page footer {\n  background: white;\n  text-align: center;\n  padding: 3;\n  -bottom: 1em;\n}\n.main-page footer ul {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.main-page footer img {\n  max-width: 140px;\n  max-height: 60px;\n  margin: 25px;\n}\n\narticle {\n  display: grid;\n  grid-template-rows: 50vh;\n  gap: 1rem;\n  align-items: center;\n  overflow: hidden;\n\n  & img {\n    min-height: 50vh;\n    object-fit: cover;\n    transition: transform 250ms ease-in-out;\n  }\n\n  & img:hover {\n    transform: scale(.95);\n  }\n\n  @include media-query('lg') {\n    grid-template-columns: 1fr 1fr;\n\n    & .image {\n      grid-column: 2;\n    }\n\n\n    &:nth-child(even) .description {\n      grid-row: 1;\n      grid-column: 2;\n    }\n\n    &:nth-child(even) .image {\n      grid-row: 1;\n      grid-column: 1;\n    }\n  }\n}\n\narticle .description {\n  max-width: 45ch;\n}\n\narticle .summary {\n  color: color-dark-glare;\n}\n\n.lulworth {\n  margin-top: 1em;\n  border-top: 2px solid get-color('dark-glare');\n  border-radius: 2px;\n}","/// APPLY UTILITY MIXIN\n/// Grab the property and value of one of the $gorko-config utilities\n/// that the generator will generate a class for.\n///\n/// @param {string} $key - The configured utilityâ€™s key\n/// @param {string} $value-key - The value key that you are looking for within the utilty\n///\n@mixin apply-utility($key, $value-key) {\n  $utility: map-get($gorko-config, $key);\n  $property: map-get($utility, 'property');\n  $items: map-get($utility, 'items');\n  $item-value: map-get($items, $value-key);\n\n  @if ($property and $item-value) {\n    #{ $property }: #{$item-value};\n  } @else {\n    @if ($property) {\n      @warn #{'Value: â€˜' + $value-key + 'â€™ doesnâ€™t exist in â€˜' + $key + 'â€™' };\n    }\n\n    @if ($item-value) {\n      @warn #{ 'Utility â€˜' + $key + 'â€™ doesnâ€™t exist' };\n    }\n  }\n}\n","/// MEDIA QUERY MIXIN\n/// Pass in the key of one of your breakpoints set in `$gorko-config['breakpoints']`\n/// and this mixin will generate the @media query with your configured value.\n///\n/// @param {string} $key - The key of your configured breakpoint\n///\n@mixin media-query($key) {\n  $breakpoints: map-get($gorko-config, 'breakpoints');\n  $matched-breakpoint: map-get($breakpoints, $key);\n\n  @if not $matched-breakpoint {\n    @warn #{ 'Breakpoint, â€˜' + $key + 'â€™ not found in `$gorko-config`. Make sure itâ€™s set in the â€˜breakpointsâ€™ section.' };\n  } @else {\n    @media #{ $matched-breakpoint } {\n      @content;\n    }\n  }\n}\n",".definition-group {\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  grid-gap: 0.5rem 1.5rem;\n}\n",".tags-list {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n\n  &[class] {\n    margin-inline-start: -#{get-size('400')};\n  }\n\n  > * {\n    padding-top: get-size('400');\n    padding-inline-start: get-size('400');\n  }\n}\n",".site-foot {\n  padding: get-size('500') 0 get-size('700') 0;\n  text-align: center;\n}\n\n.site-foot > * {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 1em;\n  align-items: center;\n\n  @include media-query('md') {\n    flex-direction: row;\n  }\n\n}\n\n",".site-head {\n  padding: get-size('100') 0;\n\n  & .inner {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  & .brand {\n    text-decoration: none;\n    margin-inline-end: get-size('600'); // Prevents nav bunching up to the logo\n    width: get-size('700');\n    padding: 0 0 get-size('100') 0;\n  }\n\n  & .navigation {\n    padding: get-size('300') 0 get-size('100') 0;\n  }\n\n  @include media-query('sm') {\n    & .brand {\n      width: get-size('800');\n    }\n  }\n\n  @include media-query('md') {\n    padding-bottom: 0;\n\n    & .brand {\n      width: get-size('900');\n    }\n  }\n}\n",".nav {\n  line-height: 1;\n  font-weight: 900;\n  margin-top: -#{get-size('300')};\n  margin-inline-start: -#{get-size('300')};\n\n  &__list {\n    display: flex;\n    flex-wrap: wrap;\n\n    > * {\n      padding-top: get-size('100');\n      padding-inline-start: get-size('300');\n    }\n  }\n\n  a {\n    text-decoration: none;\n    display: block;\n    position: relative;\n\n    // Adds the fake border to active state items\n    &[data-state='active'],\n    &[aria-current='page'] {\n      &:before {\n        content: '';\n        display: block;\n        width: 100%;\n        height: 0.25rem;\n        position: absolute;\n        top: 100%;\n        left: 0;\n        margin-top: 0.25rem;\n        background: get-color('primary-shade');\n      }\n    }\n  }\n}",".button {\n  @extend .radius;\n\n  display: inline-block;\n  padding: 0.5rem 2rem;\n  background: get-color('primary-shade');\n  color: get-color('dark-shade');\n  border: 2px solid;\n  text-transform: uppercase;\n  text-decoration: none;\n  text-align: center;\n  letter-spacing: 0.1rem;\n\n  @include apply-utility('font', 'sans');\n  @include apply-utility('weight', 'bold');\n\n  transition: transform 300ms;\n\n\n  // Make sure hover state trumps all variants with a good olâ€™ important\n  &:hover {\n    background: get-color('primary-glare') !important;\n    color: get-color('dark-shade') !important;\n    transform: scale(0.95);\n  }\n\n  // Add a ghost modifier\n  &[data-variant='ghost'] {\n    background: transparent;\n    color: get-color('primary-glare');\n  }\n}",".button-list {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n\n  @include media-query('md') {\n    // justify-content: space-between;\n  }\n}\n\n\n\n.button-list > * {\n}\n",".skip-link {\n  position: absolute;\n  top: get-size('400');\n  left: get-size('400');\n  z-index: 99;\n\n  // @extends should be used with care, but this is a great example of them being hella useful\n  &:not(:focus) {\n    @extend .visually-hidden;\n  }\n}",".cta {\n  \n  // This is a dark panel, so we need to flip the selection styles\n  ::selection {\n    // We set this as an RGBA because thatâ€™s how you get a solid color, by using 0.99\n    // alpha value. Browsers are wild.\n    background: rgba(get-color('light'), 0.99);\n    color: get-color('dark-shade');\n  }\n\n  @include media-query('md') {\n    &__inner {\n      display: grid;\n      grid-gap: get-size('700') get-size('500');\n      grid-template-columns: repeat(12, 1fr);\n\n      @supports (display: grid) {\n        > * {\n          margin: 0;\n        }\n      }\n    }\n\n    &__heading {\n      grid-column: 1/9;\n    }\n\n    &__summary {\n      grid-row: 2;\n\n      // Pull the content in from the right, by reversing columns\n      grid-column: 12/5;\n    }\n\n    &__action {\n      grid-row: 3;\n      grid-column: 1/13;\n    }\n  }\n\n  @include media-query('lg') {\n    &__inner {\n      grid-gap: get-size('500');\n    }\n\n    &__summary {\n      grid-column: 12/7;\n    }\n\n    &__action {\n      grid-column: 1/13;\n    }\n  }\n}\n",".page-header {\n  padding: get-size('800') 0;\n}",".pagination {\n  &__inner {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n  }\n\n  // Pushes a sole \"next\" link out to the right\n  &__inner > [data-direction='forwards'] {\n    margin-inline-start: auto;\n  }\n}",".people {\n  --auto-grid-gap: #{get-size('700')};\n}",".person {\n  position: relative;\n  height: 100%;\n\n  &__details {\n    position: absolute;\n    bottom: 0.5rem;\n    left: -0.25rem;\n    width: calc(100% - 0.5rem);\n    padding: 0.8rem;\n    background: get-color('secondary');\n  }\n\n  &__image {\n    filter: grayscale(1);\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n\n  &__name {\n    display: block;\n    font-size: get-size('600');\n  }\n}",".gallery {\n  display: flex;\n  flex-direction: column;\n\n  &__media {\n    max-width: 40rem;\n\n    img {\n      object-fit: cover;\n      // min-height: 720px;\n    }\n  }\n\n  // Indents the even children along the inline-start to acheive a staggered\n  // layout where space permits\n  @include media-query('md') {\n    &__item {\n      &:nth-child(even) {\n        margin-inline-start: auto;\n      }\n    }\n  }\n\n  // Flip each item to be a flex item to align caption and\n  // image together\n  @include media-query('lg') {\n    &__item {\n      $gallery-item-space: get-size('700');\n      display: flex;\n      align-items: flex-end;\n\n      // Flips the horizontal layout. Use this with care though,\n      // because changing source order can be problemetic\n      // for keyboard users\n      &:nth-child(odd) {\n        flex-direction: row-reverse;\n      }\n\n      // A specificity trump that makes sure that each item\n      // has a neg start margin\n      &:nth-child(odd),\n      &:nth-child(even) {\n        margin-inline-start: -$gallery-item-space;\n      }\n\n      > * {\n        margin-inline-start: $gallery-item-space;\n      }\n    }\n  }\n}",".social {\n  display: flex;\n  justify-content: space-between;\n}\n\n.social > * + * {\n  margin-left: 1em;\n}\n\n.icon {\n  font-size: 2em;\n}\n\n.icon::before {\n  display: inline-block;\n  font-style: normal;\n  font-variant: normal;\n  text-rendering: auto;\n  -webkit-font-smoothing: antialiased;\n}\n\n.facebook::before {\n  font-family: \"Font Awesome 5 Brands\"; font-weight: 900; content: \"\\f09a\";\n}\n\n.twitter::before {\n  font-family: \"Font Awesome 5 Brands\"; font-weight: 400; content: \"\\f099\";\n}\n\n.instagram::before {\n  font-family: \"Font Awesome 5 Brands\"; content: \"\\f16d\";\n}\n\n.tripadvisor::before {\n  font-family: \"Font Awesome 5 Brands\"; content: \"\\f262\";\n}",".dot-shadow {\n  --dot-shadow-size: 0.75rem;\n  position: relative;\n\n  &::before {\n    @extend .radius;\n\n    content: '';\n    display: block;\n    width: calc(100% + calc(var(--dot-shadow-size) * 2));\n    height: calc(100% + calc(var(--dot-shadow-size) * 2));\n    background-image: url(\"data:image/svg+xml,%3Csvg width='6px' height='6px' viewBox='0 0 6 6' version='1.1' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle fill='%23CAC6B8' cx='1' cy='5' r='1'%3E%3C/circle%3E%3Ccircle fill='%23CAC6B8' cx='4' cy='2' r='1'%3E%3C/circle%3E%3C/svg%3E%0A\");\n    position: absolute;\n    top: calc(var(--dot-shadow-size) * -1);\n    left: calc(var(--dot-shadow-size) * -1);\n    z-index: -1;\n  }\n}\n","/**\n * FLOW\n * Applies a margin to sibling elements based on a --flow-space custom property.\n */\n.flow > * + * {\n  margin-top: var(--flow-space, get-size('600'));\n}\n","$frame-colors: ('primary', 'secondary', 'tertiary');\n\n.frame {\n  position: relative;\n\n  &::before {\n    // I don't like @extends, but I'll create an exception\n    // for consistency\n    @extend .radius;\n\n    content: '';\n    pointer-events: none;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: -0.25rem;\n    left: -0.25rem;\n    border: 0.125rem solid get-color('dark');\n    z-index: 1;\n\n    @include media-query('md') {\n      top: -0.5rem;\n      left: -0.5rem;\n      border-width: 0.25rem;\n    }\n  }\n\n  // For each color, create a variant\n  @each $frame-color in $frame-colors {\n    &[data-frame='#{$frame-color}'] {\n      &::before {\n        border-color: get-color($frame-color);\n      }\n    }\n  }\n}\n","// Adds consitent space and padding for each full panel section\n.panel {\n  margin: get-size('700') 0;\n  padding: get-size('700') 0;\n\n  @include media-query('md') {\n    margin: get-size('800') 0;\n    padding: get-size('800') 0;\n  }\n}\n",".radius {\n  border-radius: var(--radius, 0.25rem);\n}\n",".site-wrap {\n  overflow-x: hidden;\n  position: relative;\n}\n",".visually-hidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: auto;\n  margin: 0;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n  white-space: nowrap;\n}\n","/**\n * WRAPPER\n * Sets a max width, adds a consistent gutter and horizontally\n * centers the contents\n */\n.wrapper {\n  max-width: var(--site-width, 70rem);\n  padding: 0 var(--site-gutter, get-size('500'));\n  margin-left: auto;\n  margin-right: auto;\n  position: relative;\n}\n","$headline-highlights: ('light', 'dark', 'primary', 'secondary', 'tertiary');\n\n.headline {\n  font-size: get-size('600');\n  max-width: 60ch;\n\n  @include media-query('sm') {\n    font-size: get-size('700');\n  }\n\n  @include media-query('md') {\n    font-size: get-size('800');\n  }\n\n  @include media-query('lg') {\n    font-size: get-size('900');\n  }\n\n  &::after {\n    content: '.';\n  }\n\n  // For each color, create an exception\n  @each $headline-highlight in $headline-highlights {\n    &[data-highlight='#{$headline-highlight}'] {\n      &::after {\n        color: get-color($headline-highlight);\n      }\n    }\n  }\n}","/*\n  AUTO GRID\n  Set the minimum item size with `--auto-grid-min-size` and youâ€™ll\n  get a fully responsive grid with no media queries.\n\n  https://piccalil.li/tutorial/create-a-responsive-grid-layout-with-no-media-queries-using-css-grid/\n*/\n.auto-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(var(--auto-grid-min-size, 16rem), 1fr));\n  grid-gap: var(--auto-grid-gap, get-size('500'));\n}","\n.split {\n  display: flex;\n  flex-direction: column;\n  /* gap: var(--spacer); waiting for safari to get fixed */\n  @include media-query('md') {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n}\n\n.split > * + * {\n  margin: var(--gap) 0 0 0;\n\n  @include media-query('md') {\n    margin: 0 0 0 var(--gap);\n  }\n}\n"]}