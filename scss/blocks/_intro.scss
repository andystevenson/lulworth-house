.intro {
  // Default is a single column layout where the header overlaps the media
  display: grid;
  grid-template-rows: get-size('700') minmax(0, 1fr) get-size('700') auto;
  grid-gap: get-size('500');
  text-align: center;

  // Force items to span 1 column
  > * {
    grid-column: 1;
  }

  & .header {
    // padding: get-size('300') get-size('500');
    // background: rgba(get-color('tertiary-shade'), 0.75);
    color: get-color('light-shade');
    z-index: 1;
    grid-row: 2;
    grid-column: 1 / -1;
    margin: 0 get-size('500'); // Adds a horizontal gutter

    // Prevents it from stretching to fill the space
    align-self: center;
  }

  & .heading {
    em {
      font-style: normal;
      display: block;

      // The weight change creates a weird indent, so this
      // optical adjustment fixes it
      transform: translateX(-3px);
    }
  }

  & .media {
    grid-row: 1/4;
    position: relative;

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }

  & .content {
    grid-row: 4;

  }
  // Switch to an inline layout with some vert space
  // above the header and content
  @include media-query('md') {
    text-align: left;

    grid-template-rows: get-size('500') auto auto auto;
    grid-template-columns: minmax(15rem, 1fr) 2fr;

    & .header {
      // padding: get-size('500');
    color: get-color('dark-shade');

      margin: 0;
      grid-column: 1;
      grid-row: 1/3;
      justify-self: start;
      align-self: end;
    }

    & .media {
      grid-column: 3/2;
      grid-row: 1/5;
    }

    & .content {
      grid-row: 3/4;
      grid-column: 1;
    }
  }
  
  // Flip the ratio for larger breakpoints
  @include media-query('lg') {
    grid-template-columns: 1fr minmax(35rem, 1fr);

    // Because it's so large, it make sense to limit the image height too
    & .media {
      height: 100%;
    }
  }
}
